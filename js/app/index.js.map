{
  "version": 3,
  "sources": ["../../imba/src/imba/scheduler.imba", "../../imba/src/imba/manifest.web.imba", "../../imba/src/imba/asset.imba", "../../imba/src/imba/dom/flags.imba", "../../imba/src/imba/dom/core.web.imba", "../../imba/src/imba/dom/fragment.imba", "../../imba/src/imba/dom/component.imba", "../../imba/src/imba/dom/context.imba", "../../imba/src/imba/dom/mount.imba", "img:app/logo.svg", "index.imba"],
  "sourcesContent": ["# imba$imbaPath=global\nlet rAF = global.requestAnimationFrame || (do(blk) setTimeout(blk,1000 / 60))\nlet FPS = 60\nlet SPF = 1 / 60\n\t\t\n# Scheduler\nclass Scheduled\n\towner = null\n\ttarget = null\n\tactive = no\n\tvalue = undefined\n\tskip = 0\n\tlast = 0\n\n\tdef tick scheduler\n\t\tlast = owner.#frames\n\t\ttarget.tick(owner)\n\t\t1\n\n\tdef update o, activate?\n\t\tlet on = active\n\t\tlet val = o.value\n\t\tlet changed = value != val\n\n\t\tif changed\n\t\t\tdeactivate!\n\t\t\tvalue = val\n\n\t\tif value or on or activate?\n\t\t\tactivate!\n\t\tself\n\n\tdef queue\n\t\towner.add(self)\n\t\treturn\n\n\tdef activate\n\t\tif value === yes\n\t\t\towner.on('commit',self)\n\t\telif value === no\n\t\t\tyes\n\t\telif typeof value == 'number'\n\t\t\t# duration\n\t\t\tlet tock = value / (1000 / 60)\n\t\t\tif tock <= 2 \n\t\t\t\towner.on('raf',self)\n\t\t\telse\n\t\t\t\t#interval = global.setInterval(queue.bind(self),value)\n\n\t\tactive = yes\n\t\tself\n\n\tdef deactivate\n\t\tif value === yes\n\t\t\towner.un('commit',self)\n\t\towner.un('raf',self)\n\n\t\tif #interval\n\t\t\tglobal.clearInterval(#interval)\n\t\t\t#interval = null\n\n\t\tactive = no\n\t\tself\n\nexport class Scheduler\n\tdef constructor\n\t\tid = Symbol!\n\t\tself.queue = []\n\t\tself.stage = -1\n\t\t#stage = -1\n\t\t#frames = 0\n\t\t#scheduled = no\n\t\t\n\t\tself.listeners = {}\n\t\tself.intervals = {}\n\t\tself.commit = do\n\t\t\tadd('commit')\n\t\t\treturn self\n\n\t\t#fps = 0\n\n\t\t$promise = null\n\t\t$resolve = null\n\t\t#ticker = do(e)\n\t\t\t#scheduled = no\n\t\t\tself.tick(e)\n\t\tself\n\n\tdef add item, force\n\t\tif force or self.queue.indexOf(item) == -1\n\t\t\tself.queue.push(item)\n\n\t\t#schedule! unless #scheduled\n\t\treturn self\n\n\tdef listen ns, item\n\t\tlet set = listeners[ns]\n\t\tlet first = !set\n\t\tset ||= listeners[ns] = new Set\n\t\tset.add(item)\n\n\t\tadd('raf') if ns == 'raf' and first\n\t\tself\t\n\n\tdef unlisten ns, item\n\t\tlet set = listeners[ns]\n\t\tset && set.delete(item)\n\t\tif ns == 'raf' and set and set.size == 0\n\t\t\tdelete listeners.raf\n\t\tself\n\n\tdef on ns,item\n\t\tlisten(ns,item)\n\n\tdef un ns,item\n\t\tunlisten(ns,item)\n\n\tget promise\n\t\t$promise ||= new Promise do(resolve)\n\t\t\t$resolve = resolve\n\n\tdef tick timestamp\n\t\tlet items = self.queue\n\t\tlet frame = #frames++\n\t\tself.ts = timestamp unless self.ts\n\t\tself.dt = timestamp - self.ts\n\t\tself.ts = timestamp\n\t\tself.queue = []\n\t\t#stage = 1\n\n\t\t# calculate frames elapsed since last tick etc?\n\n\t\tif items.length\n\t\t\tfor item,i in items\n\t\t\t\tif typeof item === 'string' && listeners[item]\n\t\t\t\t\tlisteners[item].forEach do |item|\n\t\t\t\t\t\tif item.tick isa Function\n\t\t\t\t\t\t\titem.tick(self)\n\t\t\t\t\t\telif item isa Function\n\t\t\t\t\t\t\titem(self)\n\t\t\t\telif item isa Function\n\t\t\t\t\titem(self.dt,self)\n\t\t\t\telif item.tick\n\t\t\t\t\titem.tick(self.dt,self)\n\n\t\t#stage = #scheduled ? 0 : -1\n\n\t\tif $promise\n\t\t\t$resolve(self)\n\t\t\t$promise = $resolve = null\n\n\t\tif listeners.raf and true\n\t\t\tadd('raf')\n\t\tself\n\n\tdef #schedule\n\t\tif !#scheduled\n\t\t\t#scheduled = yes\n\t\t\t#stage = 0 if #stage == -1\n\t\t\trAF(#ticker)\n\t\tself\n\n\tdef schedule item, o\n\t\to ||= (item[id] ||= {value: yes})\n\t\tlet state = o[id] ||= new Scheduled(owner: self, target: item)\n\t\tstate.update(o,yes)\n\n\tdef unschedule item, o = {}\n\t\to ||= item[id]\n\t\tlet state = o and o[id]\n\t\tif state and state.active\n\t\t\tstate.deactivate!\n\t\tself\n\nexport const scheduler = new Scheduler \n\nexport def commit\n\tscheduler.add('commit').promise\n\nexport def setTimeout fn,ms\n\tglobal.setTimeout(&,ms) do\n\t\tfn!\n\t\tcommit!\n\t\treturn\n\nexport def setInterval fn,ms\n\tglobal.setInterval(&,ms) do\n\t\tfn!\n\t\tcommit!\n\t\treturn\n\nexport const clearInterval = global.clearInterval\nexport const clearTimeout = global.clearTimeout\n\nlet instance = global.imba ||= {}\ninstance.commit = commit\ninstance.setTimeout = setTimeout\ninstance.setInterval = setInterval\ninstance.clearInterval = clearInterval\ninstance.clearTimeout = clearTimeout\n", "class Manifest\n\tdef constructor\n\t\tdata = {}\n\nexport const manifest = new Manifest\n", "# create proxy\n\nimport {manifest} from './manifest'\n\nclass AssetProxy\n\tstatic def wrap meta\n\t\tlet handler = new AssetProxy(meta)\n\t\tnew Proxy(handler,handler)\n\n\tdef constructor meta\n\t\tmeta = meta\n\n\tget input\n\t\tmanifest.inputs[meta.input]\n\n\tget asset\n\t\tglobalThis._MF_ ? meta : input.asset\n\t\n\tdef set target, key, value\n\t\treturn true\n\n\tdef get target, key\n\t\tif meta.meta and meta.meta[key] != undefined\n\t\t\treturn meta.meta[key]\n\t\t\t\n\t\tif key == 'absPath' and !asset.absPath\n\t\t\treturn asset.url\t\n\n\t\tasset[key]\n\nclass SVGAsset\n\tprop url\n\tprop meta\n\n\tdef adoptNode node\n\t\tif meta..content\n\t\t\tfor own k,v of meta.attributes\n\t\t\t\tnode.setAttribute(k,v)\n\t\t\tnode.innerHTML = meta.content\n\t\tself\n\t\n\tdef toString\n\t\turl\n\t\n\tdef toStyleString\n\t\t\"url({url})\"\n\n\nexport def asset data\n\tif data.#asset\n\t\treturn data.#asset\n\n\tif data.type == 'svg'\n\t\treturn data.#asset ||= new SVGAsset(data)\n\t\n\tif data.input\n\t\tlet extra = globalThis._MF_ and globalThis._MF_[data.input]\n\t\tif extra\n\t\t\tObject.assign(data,extra)\n\t\t\tdata.toString = do this.absPath\n\t\t\t# data.#asset = data\n\t\treturn data.#asset ||= AssetProxy.wrap(data)\n\t\n\treturn data", "export class Flags\n\n\tdef constructor dom\n\t\tdom = dom\n\t\tstring = \"\"\n\n\tdef contains ref\n\t\treturn dom.classList.contains(ref)\n\n\tdef add ref\n\t\treturn self if contains(ref)\n\t\tstring += (string ? ' ' : '') + ref\n\t\tdom.classList.add(ref)\n\t\t# sync!\n\t\treturn self\n\n\tdef remove ref\n\t\treturn self unless contains(ref)\n\t\tlet regex = new RegExp('(^|\\\\s)*' + ref + '(\\\\s|$)*', 'g')\n\t\tstring = string.replace(regex, '')\n\t\tdom.classList.remove(ref)\n\t\t# sync!\n\t\treturn self\n\n\tdef toggle ref, bool\n\t\tbool = !contains(ref) if bool === undefined\n\t\tbool ? add(ref) : remove(ref)\n\t\t\n\tdef incr ref\n\t\tlet m = stacks ||= {}\n\t\tlet c = m[ref] or 0\n\t\tadd(ref) if c < 1\n\t\treturn m[ref] = Math.max(c,0) + 1\n\t\n\tdef decr ref\n\t\tlet m = stacks ||= {}\n\t\tlet c = m[ref] or 0\n\t\tremove(ref) if c == 1\n\t\treturn m[ref] = Math.max(c,1) - 1\n\n\tdef valueOf\n\t\tstring\n\n\tdef toString\n\t\tstring\n\n\tdef sync\n\t\tdom.flagSync$!", "import {Flags} from './flags'\n\nexport const {\n\tEvent,\n\tUIEvent,\n\tMouseEvent,\n\tPointerEvent,\n\tKeyboardEvent,\n\tCustomEvent,\n\tNode,\n\tComment,\n\tText,\n\tElement,\n\tHTMLElement,\n\tHTMLHtmlElement,\n\tHTMLSelectElement,\n\tHTMLInputElement,\n\tHTMLTextAreaElement,\n\tHTMLButtonElement,\n\tHTMLOptionElement,\n\tHTMLScriptElement,\n\tSVGElement,\n\tDocumentFragment,\n\tShadowRoot,\n\tDocument,\n\tWindow,\n\tcustomElements\n} = global.window\n\n# export const document = global.window.document\nconst CustomTagConstructors = {}\nconst CustomTagToElementNames = {}\nexport const TYPES = {}\nexport const CUSTOM_TYPES = {}\nexport def get_document\n\tglobal.document\n\nexport def use_window\n\tyes\n\n\n\n# Basic node extensions\n\nconst contextHandler =\n\tdef get target, name\n\t\tlet ctx = target\n\t\tlet val = undefined\n\t\twhile ctx and val == undefined\n\t\t\tif ctx = ctx.#parent\n\t\t\t\tval = ctx[name]\n\t\treturn val\n\nextend class Document\n\tget flags\n\t\tself.documentElement.flags\n\nextend class Node\n\tget #parent\n\t\t##parent or this.parentNode or ##up # FIX\n\n\tget #context\n\t\t##context ||= new Proxy(self,contextHandler)\n\n\tdef #init\n\t\tself\n\n\t# replace this with something else\n\tdef replaceWith$ other\n\t\tif !(other isa Node) and other.replace$\n\t\t\tother.replace$(this)\n\t\telse\n\t\t\tself.parentNode.replaceChild(other,this)\n\t\treturn other\n\n\tdef insertInto$ parent\n\t\tparent.appendChild$(this)\n\t\treturn this\n\n\tdef insertBefore$ el, prev\n\t\tthis.insertBefore(el,prev)\n\n\tdef insertBeforeBegin$ other\n\t\tself.parentNode.insertBefore(other,this)\n\n\tdef insertAfterEnd$ other\n\t\tif self.nextSibling\n\t\t\tself.nextSibling.insertBeforeBegin$(other)\n\t\telse\n\t\t\tself.parentNode.appendChild(other)\n\t\n\tdef insertAfterBegin$ other\n\t\tif self.childNodes[0]\n\t\t\tself.childNodes[0].insertBeforeBegin$(other)\n\t\telse\n\t\t\tself.appendChild(other)\n\n\tget #placeholder__\n\t\t##placeholder__ ||= global.document.createComment(\"\")\n\n\tset #placeholder__ value\n\t\tlet prev = ##placeholder__\n\t\t##placeholder__ = value\n\t\tif prev and prev != value and prev.parentNode\n\t\t\tprev.replaceWith$(value)\n\n\tdef #attachToParent\n\t\tlet ph = #placeholder__\n\t\tif ph.parentNode and ph != self\n\t\t\tph.replaceWith$(self)\n\t\tself\n\n\tdef #detachFromParent route\n\t\tlet ph = #placeholder__\n\t\tif parentNode and ph != self\n\t\t\tself.replaceWith$(ph)\n\t\t\t# TODO add detached flag?\n\t\tself\n\n# Basic element extensions\nextend class Element\n\t\n\tdef log ...params\n\t\tconsole.log(...params)\n\t\tself\n\n\tdef emit name, detail, o = {bubbles: true, cancelable: true}\n\t\to.detail = detail if detail != undefined\n\t\tlet event = new CustomEvent(name, o)\n\t\tlet res = self.dispatchEvent(event)\n\t\treturn event\n\n\tdef slot$ name, ctx\n\t\treturn self\n\n\t# inline in files or remove all together?\n\tdef text$ item\n\t\tself.textContent = item\n\t\tself\n\n\tdef insert$ item, f, prev\n\t\tlet type = typeof item\n\n\t\tif type === 'undefined' or item === null\n\t\t\t# what if the prev value was the same?\n\t\t\tif prev and prev isa Comment # check perf\n\t\t\t\treturn prev\n\n\t\t\tlet el = document.createComment('')\n\t\t\tprev ? prev.replaceWith$(el) : el.insertInto$(this)\n\t\t\treturn el\n\n\t\t# dont reinsert again\n\t\tif item === prev\n\t\t\treturn item\n\n\t\t# what if this is null or undefined -- add comment and return? Or blank text node?\n\t\telif type !== 'object'\n\t\t\tlet res\n\t\t\tlet txt = item\n\t\t\t\n\t\t\tif (f & $TAG_FIRST_CHILD$) && (f & $TAG_LAST_CHILD$)\n\t\t\t\t# FIXME what if the previous one was not text? Possibly dangerous\n\t\t\t\t# when we set this on a fragment - it essentially replaces the whole\n\t\t\t\t# fragment?\n\t\t\t\tself.textContent = txt\n\t\t\t\treturn\n\n\t\t\tif prev\n\t\t\t\tif prev isa Text # check perf\n\t\t\t\t\tprev.textContent = txt\n\t\t\t\t\treturn prev\n\t\t\t\telse\n\t\t\t\t\tres = document.createTextNode(txt)\n\t\t\t\t\tprev.replaceWith$(res,self)\n\t\t\t\t\treturn res\n\t\t\telse\n\t\t\t\tself.appendChild$(res = document.createTextNode(txt))\n\t\t\t\treturn res\t\n\n\t\telse\n\t\t\tprev ? prev.replaceWith$(item,self) : item.insertInto$(self)\n\t\t\treturn item\n\t\treturn\n\n\tdef open$\n\t\tself\n\n\tdef close$\n\t\tself\n\n\tdef end$\n\t\tself.render() if self.render\n\t\treturn\n\n\tget flags\n\t\tunless $flags\n\t\t\t# unless deopted - we want to first cache the extflags\n\t\t\t$flags = new Flags(self)\n\t\t\tif flag$ == Element.prototype.flag$\n\t\t\t\tflags$ext = self.className\n\t\t\tflagDeopt$()\n\t\treturn $flags\n\n\tdef flag$ str\n\t\t# Potentially slow\n\t\tlet ns = flags$ns\n\t\tself.className = ns ? (ns + (flags$ext = str)) : (flags$ext = str)\n\t\treturn\n\t\t\n\tdef flagDeopt$\n\t\tself.flag$ = self.flagExt$ # do(str) self.flagSync$(flags$ext = str)\n\t\tself.flagSelf$ = do(str) self.flagSync$(flags$own = str)\n\t\treturn\n\t\t\n\tdef flagExt$ str\n\t\tself.flagSync$(flags$ext = str)\n\n\tdef flagSelf$ str\n\t\t# if a tag receives flags from inside <self> we need to\n\t\t# redefine the flag-methods to later use both\n\t\tflagDeopt$()\n\t\treturn flagSelf$(str)\n\n\tdef flagSync$\n\t\tself.className = ((flags$ns or '') + (flags$ext or '') + ' ' + (flags$own || '') + ' ' + ($flags or ''))\n\n\nElement.prototype.appendChild$  = Element.prototype.appendChild\nElement.prototype.removeChild$  = Element.prototype.removeChild\nElement.prototype.insertBefore$ = Element.prototype.insertBefore\nElement.prototype.replaceChild$ = Element.prototype.replaceChild\nElement.prototype.set$ = Element.prototype.setAttribute\nElement.prototype.setns$ = Element.prototype.setAttributeNS\n\nexport def createElement name, parent, flags, text\n\tlet el = document.createElement(name)\n\t\t\n\tel.className = flags if flags\n\n\tif text !== null\n\t\tel.text$(text)\n\n\tif parent and parent isa Node\n\t\tel.insertInto$(parent)\n\n\treturn el\n\n\nconst descriptorCache = {}\ndef getDescriptor item,key,cache\n\tif !item\n\t\treturn cache[key] = null\n\n\tif cache[key] !== undefined\n\t\treturn cache[key]\n\t\n\tlet desc = Object.getOwnPropertyDescriptor(item,key)\n\n\tif desc !== undefined or item == SVGElement\n\t\treturn cache[key] = desc or null\n\n\tgetDescriptor(Reflect.getPrototypeOf(item),key,cache)\n\nextend class SVGElement\n\n\tdef set$ key,value\n\t\tlet cache = descriptorCache[nodeName] ||= {}\n\t\tlet desc = getDescriptor(this,key,cache)\n\n\t\tif !desc or !desc.set\n\t\t\tsetAttribute(key,value)\n\t\telse\n\t\t\tself[key] = value\n\t\treturn\n\n\tdef flag$ str\n\t\tlet ns = flags$ns\n\t\tself.className.baseVal = ns ? (ns + (flags$ext = str)) : (flags$ext = str)\n\t\treturn\n\n\tdef flagSelf$ str\n\t\t# if a tag receives flags from inside <self> we need to\n\t\t# redefine the flag-methods to later use both\n\t\tself.flag$ = do(str) self.flagSync$(flags$ext = str)\n\t\tself.flagSelf$ = do(str) self.flagSync$(flags$own = str)\n\t\treturn flagSelf$(str)\n\n\tdef flagSync$\n\t\tself.className.baseVal = ((flags$ns or '') + (flags$ext or '') + ' ' + (flags$own || '') + ' ' + ($flags or ''))\n\n\nextend class SVGSVGElement\n\n\tset src value\n\t\tif #src =? value\n\t\t\tif value\n\t\t\t\tif value.adoptNode\n\t\t\t\t\tvalue.adoptNode(self)\n\t\t\t\telif value.content\n\t\t\t\t\tfor own k,v of value.attributes\n\t\t\t\t\t\tsetAttribute(k,v)\n\t\t\t\t\tinnerHTML = value.content\n\t\treturn\n\n\t\t\n\nexport def createSVGElement name, parent, flags, text, ctx\n\tlet el = document.createElementNS(\"http://www.w3.org/2000/svg\",name)\n\n\tif flags\n\t\tel.className.baseVal = flags\n\n\tif parent and parent isa Node\n\t\tel.insertInto$(parent)\n\n\tif text\n\t\tel.textContent = text\n\n\treturn el\n\nexport def createComment text\n\tdocument.createComment(text)\n\nexport def createFragment\n\tdocument.createDocumentFragment!\n\n\nconst navigator = global.navigator\nconst vendor = navigator and navigator.vendor or ''\nconst ua = navigator and navigator.userAgent or ''\n\nconst isSafari = vendor.indexOf('Apple') > -1 || ua.indexOf('CriOS') >= 0 || ua.indexOf('FxiOS') >= 0\nconst supportsCustomizedBuiltInElements = !isSafari\nconst CustomDescriptorCache = new Map\n\nclass CustomHook < HTMLElement\n\tdef connectedCallback\n\t\tif supportsCustomizedBuiltInElements\n\t\t\tparentNode.removeChild(self)\n\t\telse\n\t\t\tparentNode.connectedCallback!\n\n\tdef disconnectedCallback\n\t\tif !supportsCustomizedBuiltInElements\n\t\t\tparentNode.disconnectedCallback!\n\nwindow.customElements.define('i-hook',CustomHook)\n\ndef getCustomDescriptors el, klass\n\tlet props = CustomDescriptorCache.get(klass)\n\n\tunless props\n\t\tprops = {}\n\t\tlet proto = klass.prototype\n\t\tlet protos = [proto]\n\t\twhile proto = (proto and Object.getPrototypeOf(proto))\n\t\t\tbreak if proto.constructor == el.constructor\n\t\t\tprotos.unshift(proto)\n\n\t\tfor item in protos\n\t\t\tlet desc = Object.getOwnPropertyDescriptors(item)\n\t\t\tObject.assign(props,desc)\n\t\tCustomDescriptorCache.set(klass,props)\n\n\treturn props\n\n# Registry\nexport def createComponent name, parent, flags, text, ctx\n\t# the component could have a different web-components name?\n\tlet el\n\t\n\tif typeof name != 'string'\n\t\tif name and name.nodeName\n\t\t\tname = name.nodeName\n\n\tlet cmpname = CustomTagToElementNames[name] or name\n\n\tif CustomTagConstructors[name]\n\t\tlet cls = CustomTagConstructors[name]\n\t\tlet typ = cls.prototype.#htmlNodeName\n\t\tif typ and supportsCustomizedBuiltInElements\n\t\t\tel = document.createElement(typ,is: name)\n\t\telif cls.create$ and typ\n\t\t\tel = document.createElement(typ)\n\t\t\tel.setAttribute('is',cmpname)\n\t\t\tlet props = getCustomDescriptors(el,cls)\n\t\t\tObject.defineProperties(el,props)\n\t\t\tel.__slots = {}\n\t\t\t# check if we need a hook though?\n\t\t\tel.appendChild(document.createElement('i-hook'))\n\t\telif cls.create$\n\t\t\tel = cls.create$(el)\n\t\t\tel.__slots = {}\n\t\telse\n\t\t\tconsole.warn \"could not create tag {name}\"\n\telse\n\t\tel = document.createElement(CustomTagToElementNames[name] or name)\n\n\tel.##parent = parent\n\tel.#init!\n\n\tif text !== null\n\t\tel.slot$('__').text$(text)\n\t\t\n\tif flags or el.flags$ns # or nsflag\n\t\tel.flag$(flags or '')\n\treturn el\n\nexport def getTagType name, klass\n\t# TODO follow same structure as ssr TYPES\n\tif TYPES[name]\n\t\treturn TYPES[name]\n\n\tif window[klass]\n\t\treturn window[klass]\n\n\tif window[name]\n\t\treturn window[name]\n\nexport def getSuperTagType name, klass, cmp\n\tlet typ = getTagType(name,klass)\n\tlet custom = typ == cmp or typ.prototype isa cmp or typ.prototype.#htmlNodeName\n\n\tif !custom\n\t\tlet cls = typ.prototype.#ImbaElement\n\n\t\tif !cls\n\t\t\tcls = class CustomBuiltInElement < typ\n\t\t\t\tdef constructor\n\t\t\t\t\tsuper\n\t\t\t\t\t__slots = {}\n\t\t\t\t\t__F = 0\n\n\t\t\ttyp.prototype.#ImbaElement = cls\n\t\t\tlet descriptors = Object.getOwnPropertyDescriptors(cmp.prototype)\n\t\t\tObject.defineProperties(cls.prototype,descriptors)\n\t\t\tcls.prototype.#htmlNodeName = name\n\n\t\treturn cls\n\n\treturn typ\n\nexport def defineTag name, klass, options = {}\n\tTYPES[name] = CUSTOM_TYPES[name] = klass\n\n\tklass.nodeName = name\n\n\tlet componentName = name\n\tlet proto = klass.prototype\n\n\tif name.indexOf('-') == -1\n\t\tcomponentName = \"{name}-tag\"\n\t\tCustomTagToElementNames[name] = componentName\n\n\tlet basens = proto._ns_\n\tif options.ns\n\t\tlet ns = options.ns\n\t\tlet flags = ns + ' ' + ns + '_ '\n\t\tif basens\n\t\t\tflags += proto.flags$ns \n\t\t\tns += ' ' + basens\n\t\tproto._ns_ = ns\n\t\tproto.flags$ns = flags\n\n\tif proto.#htmlNodeName\n\t\toptions.extends = proto.#htmlNodeName\n\n\tif options.extends\n\t\tproto.#htmlNodeName = options.extends\n\t\tCustomTagConstructors[name] = klass\n\n\t\tif supportsCustomizedBuiltInElements\n\t\t\twindow.customElements.define(componentName,klass,extends: options.extends)\n\telse\n\t\twindow.customElements.define(componentName,klass)\n\n\treturn klass\n\t\nlet instance = global.imba ||= {}\ninstance.document = global.document\n", "import {Element,Text,DocumentFragment,createFragment,createComment} from './core'\n\nextend class DocumentFragment\n\n\tget #parent\n\t\t##up or ##parent\n\n\t# Called to make a documentFragment become a live fragment\n\tdef setup$ flags, options\n\t\t$start = createComment('start')\n\t\t$end = createComment('end')\n\n\t\t$end.replaceWith$ = do(other)\n\t\t\tthis.parentNode.insertBefore(other,this)\n\t\t\treturn other\n\n\t\tthis.appendChild($start)\n\t\tthis.appendChild($end)\n\t\n\t# when we for sure know that the only content should be\n\t# a single text node\n\tdef text$ item\n\t\tunless $text\n\t\t\t$text = this.insert$(item)\n\t\telse\n\t\t\t$text.textContent = item\n\t\treturn\n\t\n\tdef insert$ item, options, toReplace\n\t\tif ##parent\n\t\t\t# if the fragment is attached to a parent\n\t\t\t# we can just proxy the call through\n\t\t\t##parent.insert$(item,options,toReplace or $end)\n\t\telse\n\t\t\tElement.prototype.insert$.call(this,item,options,toReplace or $end)\n\n\tdef insertInto$ parent, before\n\t\tunless ##parent\n\t\t\t##parent = parent\n\t\t\t# console.log 'insertFrgment into',parent,Array.from(self.childNodes)\n\t\t\tparent.appendChild$(this)\n\t\treturn this\n\n\tdef replaceWith$ other, parent\n\t\t$start.insertBeforeBegin$(other)\n\t\tvar el = $start\n\t\twhile el\n\t\t\tlet next = el.nextSibling\n\t\t\tself.appendChild(el)\n\t\t\tbreak if el == $end\n\t\t\tel = next\n\t\t\t\n\t\treturn other\n\n\tdef appendChild$ child\n\t\t$end ? $end.insertBeforeBegin$(child) : self.appendChild(child)\n\t\treturn child\n\n\tdef removeChild$ child\n\t\tchild.parentNode && child.parentNode.removeChild(child)\n\t\tself\n\n\tdef isEmpty$\n\t\tlet el = $start\n\t\tlet end = $end\n\n\t\twhile el = el.nextSibling\n\t\t\tbreak if el == end\n\t\t\treturn false if el isa Element or el isa Text\n\t\treturn true\n\nclass VirtualFragment\n\tdef constructor f, parent\n\t\t__F = f\n\t\t#parent = parent\n\n\tdef appendChild$ item, index\n\t\t# we know that these items are dom elements\n\t\tif $end and #parent\n\t\t\t$end.insertBeforeBegin$(item)\n\t\telif #parent\n\t\t\t#parent.appendChild$(item)\n\t\treturn\n\n\tdef replaceWith$ other\n\t\tself.detachNodes()\n\t\t$end.insertBeforeBegin$(other)\n\t\t#parent.removeChild$($end)\n\t\t#parent = null\n\t\treturn\n\n\tdef joinBefore$ before\n\t\tself.insertInto$(before.parentNode,before)\n\n\tdef insertInto$ parent, before\n\t\tunless #parent\n\t\t\t#parent = parent\n\t\t\tbefore ? before.insertBeforeBegin$($end) : parent.appendChild$($end)\n\t\t\tself.attachNodes()\n\t\treturn this\n\t\n\tdef replace$ other\n\t\tunless #parent\n\t\t\t#parent = other.parentNode\n\t\tother.replaceWith$($end)\n\t\tself.attachNodes()\n\t\tself\n\t\t\n\tdef setup\n\t\tself\n\nclass KeyedTagFragment < VirtualFragment\n\t\n\tdef constructor f, parent\n\t\tsuper\n\n\t\tif !(f & $TAG_FIRST_CHILD$)\n\t\t\t$start = createComment('start')\n\t\t\tparent.appendChild$($start) if parent\n\n\t\tunless f & $TAG_LAST_CHILD$\n\t\t\t$end = createComment('end')\n\t\t\tparent.appendChild$($end) if parent\n\n\t\tself.setup()\n\n\tdef setup\n\t\tself.array = []\n\t\tself.changes = new Map\n\t\tself.dirty = no\n\t\tself.$ = {}\n\n\tdef push item, idx\n\t\t# on first iteration we can merely run through\n\t\tunless __F & $TAG_INITED$\n\t\t\tself.array.push(item)\n\t\t\tself.appendChild$(item)\n\t\t\treturn\n\n\t\tlet toReplace = self.array[idx]\n\n\t\tif toReplace === item\n\t\t\tyes\n\t\telse\n\t\t\tself.dirty = yes\n\t\t\t# if this is a new item\n\t\t\tlet prevIndex = self.array.indexOf(item)\n\t\t\tlet changed = self.changes.get(item)\n\n\t\t\tif prevIndex === -1\n\t\t\t\t# should we mark the one currently in slot as removed?\n\t\t\t\tself.array.splice(idx,0,item)\n\t\t\t\tself.insertChild(item,idx)\n\n\t\t\telif prevIndex === idx + 1\n\t\t\t\tif toReplace\n\t\t\t\t\tself.changes.set(toReplace,-1)\n\t\t\t\tself.array.splice(idx,1)\n\n\t\t\telse\n\t\t\t\tself.array.splice(prevIndex,1) if prevIndex >= 0\n\t\t\t\tself.array.splice(idx,0,item)\n\t\t\t\tself.insertChild(item,idx)\n\n\t\t\tif changed == -1\n\t\t\t\tself.changes.delete(item)\n\t\treturn\n\n\tdef insertChild item, index\n\t\tif index > 0\n\t\t\tlet other = self.array[index - 1]\n\t\t\t# will fail with text nodes\n\t\t\tother.insertAfterEnd$(item)\n\t\telif $start\n\t\t\t$start.insertAfterEnd$(item)\n\t\telse\n\t\t\t#parent.insertAfterBegin$(item)\n\t\treturn\n\n\tdef removeChild item, index\n\t\t# self.map.delete(item)\n\t\t# what if this is a fragment or virtual node?\n\t\tif item.parentNode == #parent\n\t\t\t#parent.removeChild(item)\n\t\treturn\n\n\tdef attachNodes\n\t\tfor item,i in self.array\n\t\t\t$end.insertBeforeBegin$(item)\n\t\treturn\n\n\tdef detachNodes\n\t\tfor item in self.array\n\t\t\t#parent.removeChild(item)\n\t\treturn\n\n\tdef end$ index\n\t\tunless __F & $TAG_INITED$\n\t\t\t__F |= $TAG_INITED$\n\t\t\treturn\n\n\t\tif self.dirty\n\t\t\tself.changes.forEach do |pos,item|\n\t\t\t\tif pos == -1\n\t\t\t\t\tself.removeChild(item)\n\t\t\tself.changes.clear()\n\t\t\tself.dirty = no\n\n\t\t# there are some items we should remove now\n\t\tif self.array.length > index\n\t\t\t\n\t\t\t# remove the children below\n\t\t\twhile self.array.length > index\n\t\t\t\tlet item = self.array.pop()\n\t\t\t\tself.removeChild(item)\n\t\t\t# self.array.length = index\n\t\treturn\n\nclass IndexedTagFragment < VirtualFragment\n\n\tdef constructor f, parent\n\t\tsuper\n\n\t\tunless f & $TAG_LAST_CHILD$\n\t\t\t$end = createComment('end')\n\t\t\tparent.appendChild$($end) if parent\n\n\t\tself.setup()\n\n\tdef setup\n\t\tself.$ = []\n\t\tself.length = 0\n\n\tdef end$ len\n\t\tlet from = self.length\n\t\treturn if from == len or !#parent\n\t\tlet array = self.$\n\t\tlet par = #parent\n\n\t\tif from > len\n\t\t\twhile from > len\n\t\t\t\tpar.removeChild$(array[--from])\n\t\telif len > from\n\t\t\twhile len > from\n\t\t\t\tself.appendChild$(array[from++])\n\t\tself.length = len\n\t\treturn\n\n\tdef attachNodes\n\t\tfor item,i in self.$\n\t\t\tbreak if i == self.length\n\t\t\t$end.insertBeforeBegin$(item)\n\t\treturn\n\n\tdef detachNodes\n\t\tlet i = 0\n\t\twhile i < self.length\n\t\t\tlet item = self.$[i++]\n\t\t\t#parent.removeChild$(item)\n\t\treturn\n\nexport def createLiveFragment bitflags, options, par\n\tconst el = createFragment!\n\tel.setup$(bitflags, options)\n\tel.##up = par if par\n\treturn el\n\nexport def createIndexedFragment bitflags, parent\n\treturn new IndexedTagFragment(bitflags,parent)\n\nexport def createKeyedFragment bitflags, parent\n\treturn new KeyedTagFragment(bitflags,parent)\n\n\n", "import {Node,HTMLElement,CUSTOM_TYPES} from './core'\nimport {createLiveFragment} from './fragment'\nimport {scheduler} from '../scheduler'\n\nconst hydrator = new class\n\titems = []\n\tcurrent = null\n\tlastQueued = null\n\ttests = 0\n\n\tdef flush\n\t\tlet item = null\n\n\t\tif false\n\t\t\tconsole.log 'flush hydrate',items,tests\n\t\t\tfor item,i in items\n\t\t\t\tlet next = items[i + 1]\n\t\t\t\tif next\n\t\t\t\t\tunless next.compareDocumentPosition(item) & Node.DOCUMENT_POSITION_PRECEDING\n\t\t\t\t\t\tconsole.log \"WRONG ORDER!!!\",item,next,next.compareDocumentPosition(item)\n\n\t\twhile item = items.shift!\n\t\t\tcontinue if !item.parentNode or item.hydrated?\n\t\t\t# Mark as inited to stop connectedCallback from early exit\n\t\t\tlet prev = current\n\t\t\tcurrent = item\n\t\t\titem.__F |= $EL_SSR$\n\t\t\titem.connectedCallback!\n\t\t\tcurrent = prev\n\t\treturn\n\n\tdef queue item\n\t\t# let len = items.push(item)\n\t\tlet len = items.length\n\t\tlet idx = 0\n\t\tlet prev = lastQueued\n\t\tlastQueued = item\n\n\t\tlet BEFORE = Node.DOCUMENT_POSITION_PRECEDING\n\t\tlet AFTER = Node.DOCUMENT_POSITION_FOLLOWING\n\n\t\tif len\n\t\t\tlet prevIndex = items.indexOf(prev)\n\t\t\tlet index = prevIndex\n\n\t\t\tlet compare = do(a,b)\n\t\t\t\ttests++\n\t\t\t\ta.compareDocumentPosition(b)\n\n\t\t\tif prevIndex == -1 or prev.nodeName != item.nodeName\n\t\t\t\tindex = prevIndex = 0\n\n\t\t\tlet curr = items[index]\n\n\t\t\twhile curr and compare(curr,item) & AFTER\n\t\t\t\tcurr = items[++index]\n\n\t\t\tif index != prevIndex\n\t\t\t\tcurr ? items.splice(index,0,item) : items.push(item)\n\t\t\telse\n\t\t\t\twhile curr and compare(curr,item) & BEFORE\n\t\t\t\t\tcurr = items[--index]\n\t\t\t\tif index != prevIndex\n\t\t\t\t\tcurr ? items.splice(index + 1,0,item) : items.unshift(item)\n\t\telse\n\t\t\titems.push(item)\n\t\t\tglobal.queueMicrotask(flush.bind(self)) if !current\n\n\t\treturn\n\n\tdef run item\n\t\treturn if active\n\t\t# look for parents that are still hydrated\n\t\t# only the ssr elements that are not yet awakened\n\t\tactive = yes\n\t\t# let all = global.document.getElementsByClassName('__ssr')\n\t\tlet all = global.document.querySelectorAll('.__ssr')\n\t\tconsole.log 'running hydrator',item,all.length,Array.from(all)\n\n\t\tfor item in all\n\t\t\titem.#count ||= 1\n\t\t\titem.#count++\n\t\t\tlet name = item.nodeName\n\t\t\tlet typ = map[name] ||= global.window.customElements.get(name.toLowerCase!) or HTMLElement\n\t\t\tconsole.log 'item type',name,typ,!!CUSTOM_TYPES[name.toLowerCase!]\n\t\t\t# console.log 'hydrate??',item.constructor\n\t\t\tcontinue if !item.connectedCallback or !item.parentNode or item.hydrated?\n\t\t\tconsole.log 'hydrate',item # !!item.parentNode,item,item.connectedCallback\n\t\t\t# item.connectedCallback!\n\n\t\tactive = no\n\nexport def hydrate\n\thydrator.flush!\n\nexport class ImbaElement < HTMLElement\n\tdef constructor\n\t\tsuper()\n\t\tif flags$ns\n\t\t\t# explain?\n\t\t\tflag$ = flagExt$\n\n\t\tsetup$()\n\t\tbuild()\n\n\tdef setup$\n\t\t__slots = {}\n\t\t__F = 0\n\n\tdef #init\n\t\t__F |= ($EL_INITED$ | $EL_HYDRATED$)\n\t\tself\n\t\t\n\tdef flag$ str\n\n\t\tself.className = flags$ext = str\n\t\treturn\n\n\t# returns the named slot - for context\n\tdef slot$ name, ctx\n\t\tif name == '__' and !render\n\t\t\treturn self\n\n\t\t__slots[name] ||= createLiveFragment(0,null,self)\n\n\t# called immediately after construction \n\tdef build\n\t\tself\n\n\t# called before the first mount\n\tdef awaken\n\t\tself\n\t\n\t# called when element is attached to document\n\tdef mount\n\t\tself\n\n\tdef unmount\n\t\tself\n\n\t# called after render\n\tdef rendered\n\t\tself\n\n\t# called before element is stringified on server (SSR)\n\tdef dehydrate\n\t\tself\n\n\t# called before awaken if element was not initially created via imba - on the client\n\tdef hydrate\n\t\t# should only autoschedule if we are not awakening inside a parent context that\n\t\tautoschedule = yes\n\t\tself\n\n\tdef tick\n\t\tcommit()\n\n\t# called when component is (re-)rendered from its parent\n\tdef visit\n\t\tcommit()\n\n\t# Wrapper for rendering. Default implementation\n\tdef commit\n\t\tunless render?\n\t\t\t__F |= $EL_UNRENDERED$\n\t\t\treturn self\n\t\t__F |= $EL_RENDERING$ \n\t\trender && render()\n\t\trendered()\n\t\t__F = (__F | $EL_RENDERED$) & ~$EL_RENDERING$ & ~$EL_UNRENDERED$\n\n\tget autoschedule\n\t\t(__F & $EL_SCHEDULE$) != 0\n\t\n\tset autoschedule value\n\t\tvalue ? (__F |= $EL_SCHEDULE$) : (__F &= ~$EL_SCHEDULE$)\n\n\t###\n\tNaming and accepted values will likely change - experimental\n\n\tyes = render on events / imba.commit\n\tno = force manual render\n\tnull / undefined = render via parent\n\t(n)s = render every n s\n\t(n)ms = render every n ms\n\t(n)fps = render n times per second\n\t###\n\tset autorender value\n\t\tlet o = #autorender ||= {}\n\t\to.value = value\n\t\tscheduler.schedule(self,o) if mounted?\n\t\treturn\n\n\tget render?\n\t\treturn !suspended?\n\n\tget mounting?\n\t\treturn (__F & $EL_MOUNTING$) != 0\n\n\tget mounted?\n\t\treturn (__F & $EL_MOUNTED$) != 0\n\t\n\tget awakened?\n\t\treturn (__F & $EL_AWAKENED$) != 0\n\t\n\tget rendered?\n\t\treturn (__F & $EL_RENDERED$) != 0\n\n\tget suspended?\n\t\treturn (__F & $EL_SUSPENDED$) != 0\n\n\tget rendering?\n\t\treturn (__F & $EL_RENDERING$) != 0\n\t\n\tget scheduled?\n\t\treturn (__F & $EL_SCHEDULED$) != 0\n\n\tget hydrated?\n\t\treturn (__F & $EL_HYDRATED$) != 0\n\n\tget ssr?\n\t\treturn (__F & $EL_SSR$) != 0\n\n\tdef schedule\n\t\tscheduler.on('commit',self)\n\t\t__F |= $EL_SCHEDULED$\n\t\treturn self\n\n\tdef unschedule\n\t\tscheduler.un('commit',self)\n\t\t__F &= ~$EL_SCHEDULED$\n\t\treturn self\n\n\tdef suspend cb = null\n\t\tlet val = flags.incr('_suspended_')\n\t\t__F |= $EL_SUSPENDED$\n\t\tif cb isa Function\n\t\t\tawait cb()\n\t\t\tunsuspend!\n\t\tself\n\n\tdef unsuspend\n\t\tlet val = flags.decr('_suspended_')\n\t\tif val == 0\n\t\t\t__F &= ~$EL_SUSPENDED$\n\t\t\tcommit! if $EL_UNRENDERED$\n\n\t\tself\n\n\tdef end$\n\t\tvisit()\n\n\tdef open$\n\t\tif __F & $EL_SSR$\n\t\t\t__F = __F & ~$EL_SSR$\n\t\t\t# remove flag\n\t\t\t# not if ssr?!\n\t\t\tclassList.remove('_ssr_')\n\t\t\tif flags$ext and flags$ext.indexOf('_ssr_') == 0\n\t\t\t\tflags$ext = flags$ext.slice(5)\n\t\t\tinnerHTML = '' unless __F & $EL_RENDERED$\n\t\tself\n\n\tdef connectedCallback\n\t\tlet flags = __F\n\t\tlet inited = flags & $EL_INITED$\n\t\tlet awakened = flags & $EL_AWAKENED$\n\n\t\tif !inited and !(flags & $EL_SSR$)\n\t\t\thydrator.queue(self)\n\t\t\treturn\n\n\t\t# return if we are already in the process of mounting - or have mounted\n\t\tif flags & ($EL_MOUNTING$ | $EL_MOUNTED$)\n\t\t\treturn\n\t\t\n\t\t__F |= $EL_MOUNTING$\n\n\t\tunless inited\n\t\t\t#init!\n\n\t\tunless flags & $EL_HYDRATED$\n\t\t\t# clearly seems wrong?\n\t\t\tflags$ext = className\n\t\t\t__F |= $EL_HYDRATED$\n\t\t\tself.hydrate()\n\t\t\tcommit()\n\n\t\tunless awakened\n\t\t\tawaken()\n\t\t\t__F |= $EL_AWAKENED$\n\n\t\tlet res = mount()\n\t\tif res && res.then isa Function\n\t\t\tres.then(scheduler.commit)\n\n\t\tflags = __F = (__F | $EL_MOUNTED$) & ~$EL_MOUNTING$\n\t\t\n\t\tif flags & $EL_SCHEDULE$\n\t\t\tschedule()\n\t\t\n\t\t\n\t\tscheduler.schedule(self,#autorender) if #autorender\n\t\treturn this\n\n\tdef disconnectedCallback\n\t\t__F = __F & (~$EL_MOUNTED$ & ~$EL_MOUNTING$)\n\t\tif __F & $EL_SCHEDULED$\n\t\t\t# trigger potential unschedule listeners\n\t\t\tunschedule()\n\n\t\tunmount()\n\t\tscheduler.unschedule(self,#autorender) if #autorender", "export const renderContext = {\n\tcontext: null\n}", "import {renderContext} from './context'\nimport {scheduler} from '../scheduler'\n\nexport def render blk, ctx = {}\n\tlet prev = renderContext.context\n\trenderContext.context = ctx\n\tlet res = blk(ctx)\n\tif renderContext.context == ctx\n\t\trenderContext.context = prev\n\treturn res\n\nexport def mount mountable, into\n\tlet parent = into or global.document.body\n\tlet element = mountable\n\tif mountable isa Function\n\t\tlet ctx = {_: parent}\n\t\tlet tick = do\n\t\t\tlet prev = renderContext.context\n\t\t\trenderContext.context = ctx\n\t\t\tlet res = mountable(ctx)\n\t\t\tif renderContext.context == ctx\n\t\t\t\trenderContext.context = prev\n\t\t\treturn res\n\t\telement = tick()\n\t\tscheduler.listen('commit',tick)\n\telse\n\t\t# automatic scheduling of element - even before\n\t\t# element.__schedule = yes\n\t\telement.__F |= $EL_SCHEDULE$\n\n\tparent.appendChild(element)", "import {asset} from 'imba';\nimport url from './logo.svg';\nexport default asset({\n\turl: url,\n\ttype: 'svg',\n\tmeta: {\"attributes\":{\"viewBox\":\"0 0 1164 400\",\"fill-rule\":\"evenodd\",\"clip-rule\":\"evenodd\",\"stroke-linejoin\":\"round\",\"stroke-miterlimit\":\"2\"},\"flags\":[],\"content\":\"\\n  <path fill=\\\"none\\\" d=\\\"M.658 0h1163v400H.658z\\\"/>\\n  <g fill=\\\"#273240\\\">\\n    <path d=\\\"M410.808 338.269c-3.618 0-6.551-2.932-6.551-6.55V159.88c0-3.618 2.933-6.55 6.551-6.55h41.928c3.618 0 6.55 2.932 6.551 6.55v171.839c-.001 3.618-2.933 6.55-6.551 6.55h-41.928z\\\" fill-rule=\\\"nonzero\\\"/>\\n    <ellipse cx=\\\"431.598\\\" cy=\\\"87.156\\\" rx=\\\"32.391\\\" ry=\\\"31.346\\\"/>\\n    <path d=\\\"M696.469 147.409c14.628 0 26.353 4.934 35.177 14.802 8.823 9.868 13.234 23.509 13.234 40.923v128.585c0 1.737-.69 3.403-1.918 4.632-1.229 1.228-2.895 1.918-4.632 1.918h-41.928c-1.738 0-3.404-.69-4.632-1.918-1.229-1.229-1.919-2.895-1.919-4.632V212.538c0-16.485-5.224-24.728-15.672-24.728-5.805 0-10.913 1.974-15.325 5.921-2.287 2.046-4.543 4.654-6.768 7.824-3.831 5.193-5.898 11.476-5.898 17.929-.221 22.92-.221 90.816-.221 112.235 0 1.737-.69 3.403-1.918 4.632-1.229 1.228-2.895 1.918-4.632 1.918h-41.928c-1.738 0-3.404-.69-4.632-1.918-1.229-1.229-1.919-2.895-1.919-4.632V212.538c0-16.485-5.224-24.728-15.672-24.728-5.573 0-10.623 2.032-15.151 6.095-2.67 2.396-5.279 5.458-7.828 9.187-3.292 4.656-5.06 10.219-5.06 15.921-.173 22.446-.173 91.138-.173 112.706 0 1.737-.69 3.403-1.918 4.632-1.229 1.228-2.895 1.918-4.632 1.918h-41.928c-3.618 0-6.551-2.932-6.551-6.55V159.88c0-3.618 2.933-6.55 6.551-6.55h36.022c3.176 0 5.895 2.278 6.45 5.406.448 2.526.99 5.582 1.482 8.355.25 1.4 1.273 2.537 2.638 2.934 1.366.397 2.839-.016 3.8-1.064 5.811-6.348 12.085-11.264 18.809-14.761 8.708-4.527 18.634-6.791 29.779-6.791 10.216 0 19.097 2.554 26.644 7.662 4.629 3.134 9.936 10.55 13.347 15.815.911 1.316 2.356 2.163 3.95 2.314 1.594.151 3.173-.41 4.315-1.532 5.347-5.413 14.008-13.767 19.834-16.945 8.939-4.876 19.213-7.314 30.823-7.314zM879.667 147.409c22.522 0 39.762 8.591 51.72 25.773 11.958 17.182 17.937 41.446 17.937 72.792 0 19.039-2.961 35.989-8.881 50.849-5.921 14.86-14.396 26.47-25.425 34.829-11.029 8.359-24.09 12.538-39.182 12.538-10.217 0-19.446-2.032-27.689-6.095-4.643-2.289-8.863-5.149-12.659-8.58-1.633-1.48-3.946-1.945-6.024-1.211s-3.587 2.549-3.928 4.726c-.075-.008-.076-.004-.076 0-.474 3.016-3.072 5.239-6.126 5.239h-36.906c-3.617 0-6.55-2.932-6.55-6.55V85.725c0-3.346 2.522-6.155 5.849-6.513 10.128-1.09 30.901-3.325 41.929-4.511 1.848-.199 3.694.397 5.078 1.639 1.383 1.243 2.173 3.014 2.173 4.874v79.057c.001 1.814 1.077 3.454 2.741 4.177 1.663.723 3.597.39 4.923-.847 3.916-3.649 8.454-6.77 13.581-9.401 8.824-4.527 17.995-6.791 27.515-6.791zm-19.504 156.728c21.361 0 32.042-19.388 32.042-58.163 0-21.826-2.554-36.977-7.662-45.452-5.108-8.475-12.422-12.712-21.942-12.712-7.693 0-14.643 2.71-20.849 8.128-6.84 6.025-10.759 14.699-10.759 23.814-.086 14.5-.086 40.738-.086 55.477.002 15.709 12.536 28.549 28.241 28.928.337-.024.675-.02 1.015-.02zM1120.33 284.633c0 6.966.987 12.074 2.96 15.325 1.242 2.045 2.966 3.768 5.172 5.17 2.416 1.577 3.481 4.575 2.6 7.323-.726 2.723-1.834 6.183-2.995 9.808-2.184 6.819-7.312 12.298-13.971 14.929-6.659 2.631-14.147 2.136-20.402-1.349-.002-.004-.005-.006-.008-.008-7.082-3.947-12.712-10.332-16.892-19.155-12.074 18.343-30.649 27.514-55.725 27.514-18.343 0-32.971-5.34-43.884-16.021-10.913-10.681-16.37-24.612-16.37-41.794 0-20.201 7.43-35.641 22.291-46.322 14.86-10.681 36.337-16.021 64.432-16.021h11.861c1.843 0 3.609-.732 4.912-2.035 1.303-1.303 2.035-3.069 2.035-4.912v-1.064c0-10.913-2.322-18.401-6.966-22.464-4.644-4.064-12.77-6.095-24.38-6.095-6.037 0-13.351.87-21.942 2.612-6.675 1.353-13.491 3.092-20.447 5.216-3.371 1.036-6.957-.784-8.11-4.117-2.316-6.679-6.021-17.383-8.341-24.086-1.182-3.411.619-7.135 4.026-8.327 9.659-3.329 19.512-5.954 29.563-7.868 12.19-2.322 23.51-3.483 33.958-3.483 26.47 0 45.858 5.456 58.164 16.369 12.306 10.913 18.459 27.283 18.459 49.108v71.747zm-83.24 20.201c6.037 0 11.551-1.509 16.543-4.528h.001c7.89-4.771 12.712-13.32 12.712-22.54v-15.98c0-4.117-3.337-7.453-7.453-7.453h-6.13c-12.539 0-21.884 2.205-28.037 6.617-6.153 4.412-9.23 11.261-9.23 20.549 0 7.43 1.916 13.177 5.747 17.24 3.831 4.063 9.113 6.095 15.847 6.095z\\\" fill-rule=\\\"nonzero\\\"/>\\n  </g>\\n  <path d=\\\"M360.039 167.628C323.834 99.341.596 29.568 35.591 74.7c34.995 45.132 190.036 107.062 199.223 108.212-47.568 14.937-174.53 41.73-147.353 64.299 27.177 22.569 156.265-2.637 156.052-2.236-35.746 26.937-80.254 108.258-35.536 90.883 70.555-27.413 173.158-128.44 152.062-168.23z\\\" fill=\\\"#16cec7\\\"/>\\n\"},\n\ttoString: function(){ return this.url;}\n})", "global css html\n\tff:sans\n\ntag app\n\t<self>\n\t\t<header>\n\t\t\t<svg[w:200px h:auto] src='./logo.svg'>\n\t\t\t<p> \"Edit {<code> \"app/index.imba\"} and save to reload\"\n\t\t\t<a href=\"https://imba.io\"> \"Learn Imba\"\n\nimba.mount <app>"],
  "mappings": "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",
  "names": []
}
